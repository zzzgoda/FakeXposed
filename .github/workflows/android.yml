name: Android CI

on:
  push:
    branches: [ main ]

jobs:
  build:
#    name: Build Apk on ${{ matrix.os }}
#    runs-on: ${{ matrix.os }}
#    strategy:
#      fail-fast: false
#      matrix:
#        os: [ ubuntu-latest, windows-latest, macOS-latest ]
    name: Build Apk on ubuntu-latest
    runs-on: ubuntu-latest

    steps:
      - name: Check out
        uses: actions/checkout@v2
        with:
          submodules: 'recursive'
          fetch-depth: 0

      - name: set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Set up Python 3
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Set up GitHub env (Windows)
        if: runner.os == 'Windows'
        run: |
          echo "ANDROID_SDK_ROOT=$env:ANDROID_SDK_ROOT" >> $env:GITHUB_ENV

      - name: Set up GitHub env (Unix)
        if: runner.os != 'Windows'
        run: |
          echo ANDROID_SDK_ROOT=$ANDROID_SDK_ROOT >> $GITHUB_ENV

      - name: Cache Gradle
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle-

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build release
        run:  python build.py -vrm -f ${{ secrets.storeFileBase64 }} -s ${{ secrets.signConfig }} -l 3 all

      - name: Build debug
        run: python build.py -vm -f ${{ secrets.storeFileBase64 }} -s ${{ secrets.signConfig }} all

      - name: Upload a Build Artifact
        if: runner.os == 'Linux'
        uses: actions/upload-artifact@v2.2.2
        with:
          name: ${{ github.sha }}
          path: out